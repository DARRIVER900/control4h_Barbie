@page "/administradordecanciones"
@rendermode InteractiveServer
<h3>Lita de canciones</h3>

<EditForm Model="_song" FormName="frmSong" OnValidSubmit="Agregar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="txtNameSong" class="form-label">Cancion</label>
        <InputText @bind-Value="_song.Cancion" class="form-control" id="txtNameSong" />
        <ValidationMessage For="() =>_song.Cancion" />
    </div>
    <button type="submit" class="btn btn-success">@(_editando ? "Guardar Cambios" : "Agregar")</button>
</EditForm>
<div class="mb-3">
    <label for="txtFiltrar" class="form-label">Filtrar</label>
    <InputText @bind-Value="_textoFiltro" class="form-control" id="txtFiltrar" />
</div>
<button class="btn btn-outline-danger" @onclick="Filtrar">Filtrar</button>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Canciones
            </th>
            <th>
                Acciones
            </th>
        </tr>
    </thead>
    <tbody>
        @if(_cancionesParaMostrar.Count == 0)
        {
            <tr>
                <td colspan="2" class="text-muted text-center">No se encontraron canciones 😢</td>
            </tr>
        }
        else
        {
            @foreach (Canciones canciones in _cancionesParaMostrar)
            {
                <tr>
                    <td>@canciones.Cancion</td>

                    <td>
                        <button class="btn btn-outline-danger" @onclick="()=>Eliminar(canciones)" />
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="black" class="bi bi-trash-fill" viewBox="0 0 16 16">
                            <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0" />
                        </svg>
                    </td>

                    <td>
                        <button class="btn btn-outline-danger" @onclick="()=>Editar(canciones)" />
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                        </svg>
                    </td>
                </tr>
            }

        }
    </tbody>
</table>

@code {
    private Canciones _song = new();
    private List<Canciones> _songs = new();
    private List<Canciones> _cancionesFiltradas = new();
    private string _textoFiltro = "";
    private List<Canciones> _cancionesParaMostrar => string.IsNullOrWhiteSpace(_textoFiltro) ? _songs : _cancionesFiltradas;
    private bool _editando = false;
    private Canciones _cancionOriginal;

    private void Agregar()
    {
        if (_editando)
        {
            _cancionOriginal.Cancion = _song.Cancion;
            _editando = false;
            _cancionOriginal = null;
        }
        else
        {
            _songs.Add(new Canciones { Cancion = _song.Cancion });
        }

        _song = new();
        OrdenarAscendente();
        Filtrar();

    }
    private void Eliminar(Canciones _canciones)
    {
        _songs.Remove(_canciones);
        Filtrar();
    }

    private void Filtrar()
    {
        if(!string.IsNullOrWhiteSpace(_textoFiltro))
        {
            _cancionesFiltradas = _songs
            .Where(s => s.Cancion?.Contains(_textoFiltro, StringComparison.OrdinalIgnoreCase) == true)
            .ToList();
        }
        else
        {
            _cancionesFiltradas = _songs;
        }
    }

    private void Editar(Canciones canciones)
    {
        _editando = true;
        _cancionOriginal = canciones;
        _song = new Canciones { Cancion = canciones.Cancion };
    }

    private void OrdenarAscendente()
    {
        _songs = _songs.OrderBy(s => s.Cancion).ToList();
        Filtrar(); 
    }
}
